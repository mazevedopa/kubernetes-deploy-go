
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-server
  namespace: deploy-go
  labels:
    app: goapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goapi
  template:
    metadata:
      labels:
        app: goapi
    spec:
      imagePullSecrets:
      - name: pipeline-docker-registry
      containers:
      - name: goapi
        image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        ports:
        - containerPort: 80

---
kind: Service
apiVersion: v1
metadata:
  name: go-service
  namespace: deploy-go
spec:
  selector:
    app: goapi
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: deploy-go
  name: go-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - deploy-go.resolvenergiasolar.com
    secretName: logistica-tls                                       # Nome do secret TLS para o certificado gerado pelo cert-manager
  rules:
  - host: deploy-go.resolvenergiasolar.com
    http:
      paths:
      - path: /                                                    # Diretório base da aplicação
        pathType: Prefix
        backend:
          service:
            name: go-service                         # Nome do serviço backend
            port:
              number: 80                                        # Porta onde o serviço escuta

